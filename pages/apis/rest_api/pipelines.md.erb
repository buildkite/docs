# Pipelines API

{:toc}

## List pipelines

Returns a [paginated list](<%= paginated_resource_docs_url %>) of an organizationâ€™s pipelines.

```bash
curl "https://api.buildkite.com/v2/organizations/{org.slug}/pipelines"
```

```json
[
  {
    "id": "849411f9-9e6d-4739-a0d8-e247088e9b52",
    "graphql_id": "UGlwZWxpbmUtLS1lOTM4ZGQxYy03MDgwLTQ4ZmQtOGQyMC0yNmQ4M2E0ZjNkNDg=",
    "url": "https://api.buildkite.com/v2/organizations/acme-inc/pipelines/my-pipeline",
    "web_url": "https://buildkite.com/acme-inc/my-pipeline",
    "name": "My Pipeline",
    "slug": "my-pipeline",
    "repository": "git@github.com:acme-inc/my-pipeline.git",
    "branch_configuration": null,
    "default_branch": "master",
    "provider": {
      "id": "github",
      "webhook_url": "https://webhook.buildkite.com/deliver/xxx",
      "settings": {
        "publish_commit_status": true,
        "build_pull_requests": true,
        "build_pull_request_forks": false,
        "build_tags": false,
        "publish_commit_status_per_step": false,
        "repository": "acme-inc/my-pipeline",
        "trigger_mode": "code"
      }
    },
    "skip_queued_branch_builds": false,
    "skip_queued_branch_builds_filter": null,
    "cancel_running_branch_builds": false,
    "cancel_running_branch_builds_filter": null,
    "builds_url": "https://api.buildkite.com/v2/organizations/acme-inc/pipelines/my-pipeline/builds",
    "badge_url": "https://badge.buildkite.com/58b3da999635d0ad2daae5f784e56d264343eb02526f129bfb.svg",
    "created_at": "2013-09-03 13:24:38 UTC",
    "scheduled_builds_count": 0,
    "running_builds_count": 0,
    "scheduled_jobs_count": 0,
    "running_jobs_count": 0,
    "waiting_jobs_count": 0,
    "visibility": "private",
    "steps": [
      {
        "type": "script",
        "name": "Test :white_check_mark:",
        "command": "script/test.sh",
        "artifact_paths": "results/*",
        "branch_configuration": "master feature/*",
        "env": { },
        "timeout_in_minutes": null,
        "agent_query_rules": [ ]
      }
    ],
    "env": {
    }
  }
]
```

Required scope: `read_pipelines`

Success response: `200 OK`

## Get a pipeline

```bash
curl "https://api.buildkite.com/v2/organizations/{org.slug}/pipelines/{slug}"
```

```json
{
  "id": "849411f9-9e6d-4739-a0d8-e247088e9b52",
  "graphql_id": "UGlwZWxpbmUtLS1lOTM4ZGQxYy03MDgwLTQ4ZmQtOGQyMC0yNmQ4M2E0ZjNkNDg=",
  "url": "https://api.buildkite.com/v2/organizations/acme-inc/pipelines/my-pipeline",
  "web_url": "https://buildkite.com/acme-inc/my-pipeline",
  "name": "My Pipeline",
  "description": "This pipeline is amazing! :tada:",
  "slug": "my-pipeline",
  "repository": "git@github.com:acme-inc/my-pipeline.git",
  "branch_configuration": null,
  "default_branch": "master",
  "provider": {
    "id": "github",
    "webhook_url": "https://webhook.buildkite.com/deliver/xxx",
    "settings": {
      "publish_commit_status": true,
      "build_pull_requests": true,
      "build_pull_request_forks": false,
      "build_tags": false,
      "publish_commit_status_per_step": false,
      "repository": "acme-inc/my-pipeline",
      "trigger_mode": "code"
    }
  },
  "skip_queued_branch_builds": false,
  "skip_queued_branch_builds_filter": null,
  "cancel_running_branch_builds": false,
  "cancel_running_branch_builds_filter": null,
  "builds_url": "https://api.buildkite.com/v2/organizations/acme-inc/pipelines/my-pipeline/builds",
  "badge_url": "https://badge.buildkite.com/58b3da999635d0ad2daae5f784e56d264343eb02526f129bfb.svg",
  "created_at": "2013-09-03 13:24:38 UTC",
  "scheduled_builds_count": 0,
  "running_builds_count": 0,
  "scheduled_jobs_count": 0,
  "running_jobs_count": 0,
  "waiting_jobs_count": 0,
  "visibility": "private"
  "steps": [
    {
      "type": "script",
      "name": "Test :white_check_mark:",
      "command": "script/test.sh",
      "artifact_paths": "results/*",
      "branch_configuration": "master feature/*",
      "env": { },
      "timeout_in_minutes": null,
      "agent_query_rules": [ ]
    }
  ],
  "env": {
  }
}
```

Required scope: `read_pipelines`

Success response: `200 OK`


## Create a pipeline

You can use this endpoint to create both [YAML pipelines](https://buildkite.com/changelog/99-introducing-the-yaml-steps-editor) and visual step pipelines.

### YAML pipelines

```bash
curl -X POST "https://api.buildkite.com/v2/organizations/{org.slug}/pipelines" \
  -d '{
    "name": "My Pipeline",
    "repository": "git@github.com:acme-inc/my-pipeline.git",
    "configuration": "steps:\n - command: \"script/release.sh\"\n "Build \:package\:"\n""
  }'
```

### Visual step pipeline

```bash
curl -X POST "https://api.buildkite.com/v2/organizations/{org.slug}/pipelines" \
  -d '{
    "name": "My Pipeline",
    "repository": "git@github.com:acme-inc/my-pipeline.git",
    "steps": [
      {
        "type": "script",
        "name": "Build \:package\:",
        "command": "script/release.sh"
      },
      {
        "type": "waiter"
      },
      {
        "type": "script",
        "name": "Test \:wrench\:",
        "command": "script/release.sh",
        "artifact_paths": "log/*"
      },
      {
        "type": "manual",
        "label": "Deploy"
      },
      {
        "type": "script",
        "name": "Release \:rocket\:",
        "command": "script/release.sh",
        "branch_configuration": "master",
        "env": {
          "AMAZON_S3_BUCKET_NAME": "my-pipeline-releases"
        },
        "timeout_in_minutes": 10,
        "agent_query_rules": ["aws=true"]
      },
      {
        "type": "trigger",
        "label": "Deploy \:ship\:",
        "trigger_project_slug": "deploy",
        "trigger_commit": "HEAD",
        "trigger_branch": "master",
        "trigger_async": true
      }
    ]
  }'
```



```json
{
  "id": "14e9501c-69fe-4cda-ae07-daea9ca3afd3",
  "graphql_id": "UGlwZWxpbmUtLS1lOTM4ZGQxYy03MDgwLTQ4ZmQtOGQyMC0yNmQ4M2E0ZjNkNDg=",
  "url": "https://api.buildkite.com/v2/organizations/acme-inc/pipelines/my-pipeline",
  "web_url": "https://buildkite.com/acme-inc/my-pipeline",
  "name": "My Pipeline",
  "description": null,
  "slug": "my-pipeline",
  "repository": "git@github.com:acme-inc/my-pipeline.git",
  "branch_configuration": null,
  "default_branch": "master"
  "provider": {
    "id": "github",
    "webhook_url": "https://webhook.buildkite.com/deliver/xxx",
    "settings": {
      "publish_commit_status": true,
      "build_pull_requests": true,
      "build_pull_request_forks": false,
      "build_tags": false,
      "publish_commit_status_per_step": false,
      "repository": "acme-inc/my-pipeline",
      "trigger_mode": "code"
    }
  },
  "skip_queued_branch_builds": false,
  "skip_queued_branch_builds_filter": null,
  "cancel_running_branch_builds": false,
  "cancel_running_branch_builds_filter": null,
  "builds_url": "https://api.buildkite.com/v2/organizations/acme-inc/pipelines/my-pipeline/builds",
  "badge_url": "https://badge.buildkite.com/58b3da999635d0ad2daae5f784e56d264343eb02526f129bfb.svg",
  "created_at": "2018-08-15T05:47:45.813Z",
  "steps": [
    {
      "type": "script",
      "name": "Build \:package\:",
      "command": "script/release.sh",
      "artifact_paths": null,
      "branch_configuration": null,
      "env": {},
      "timeout_in_minutes": null,
      "agent_query_rules": [],
      "concurrency": null,
      "parallelism": null
    },
    {
      "type": "waiter"
    },
    {
      "type": "script",
      "name": "Test \:wrench\:",
      "command": "script/release.sh",
      "artifact_paths": "log/*",
      "branch_configuration": null,
      "env": {},
      "timeout_in_minutes": null,
      "agent_query_rules": [

      ],
      "concurrency": null,
      "parallelism": null
    },
    {
      "type": "manual",
      "label": "Deploy"
    },
    {
      "type": "script",
      "name": "Release \:rocket\:",
      "command": "script/release.sh",
      "artifact_paths": null,
      "branch_configuration": "master",
      "env": {
        "AMAZON_S3_BUCKET_NAME": "my-pipeline-releases"
      },
      "timeout_in_minutes": 10,
      "agent_query_rules": [
        "aws=true"
      ],
      "concurrency": null,
      "parallelism": null
    },
    {
      "type": "trigger",
      "label": "Deploy \:ship\:",
      "pipeline": "deploy",
      "build": {
        "message": null,
        "branch": "master",
        "commit": "HEAD",
        "env": null
      },
      "async": true,
      "branch_configuration": null,
      "concurrency": null,
      "parallelism": null
    }
  ],
  "env": {
  },
  "scheduled_builds_count": 0,
  "running_builds_count": 0,
  "scheduled_jobs_count": 0,
  "running_jobs_count": 0,
  "waiting_jobs_count": 0,
  "visibility": "private"
}
```

The resulting pipeline:

<%= image 'pipeline-example.png', alt: 'Image of the pipeline steps that are created in the Buildkite UI', width: 974/2, height: 90/2 %>

Required [request body properties](/docs/api#request-body-properties):

<table>
<tbody>
  <tr>
    <th><code>name</code></th>
    <td>The name of the pipeline.<p class="Docs__api-param-eg"><em>Example:</em> <code>"New Pipeline"</code></p></td>
  </tr>
  <tr>
    <th><code>repository</code></th>
    <td>The repository URL.<p class="Docs__api-param-eg"><em>Example:</em> <code>"git@github.com:acme-inc/my-pipeline.git"</code></p></td>
  </tr>
  <tr>
    <th><code>configuration</code></th>
    <td>
      The YAML pipeline that consists of the build pipeline steps.<p class="Docs__api-param-eg"><em>Example:</em> <code>"steps:\n - command: \"script/release.sh\"\n"</code>
    </td>
  </tr>
  </tbody>
</table>

Optional [request body properties](/docs/api#request-body-properties):

<table>
<tbody>
  <tr>
    <th><code>branch_configuration</code></th>
    <td>A <a href="/docs/pipelines/branch-configuration#pipeline-level-branch-filtering">branch filter pattern</a> to limit which pushed branches trigger builds on this pipeline.<p class="Docs__api-param-eg"><em>Example:</em> <code>"master feature/*"</code><br><em>Default:</em> <code>null</code></p></td>
  </tr>
  <tr>
    <th><code>cancel_running_branch_builds</code></th>
    <td>Cancel intermediate builds. When a new build is created on a branch, any previous builds that are running on the same branch will be automatically canceled.<p class="Docs__api-param-eg"><em>Example:</em> <code>true</code><br><em>Default:</em> <code>false</code></p></td>
  </tr>
  <tr>
    <th><code>cancel_running_branch_builds_filter</code></th>
    <td>A <a href="/docs/pipelines/branch-configuration#branch-pattern-examples">branch filter pattern</a> to limit which branches intermediate build cancelling applies to. <p class="Docs__api-param-eg"><em>Example:</em> <code>"develop prs/*"</code><br><em>Default:</em> <code>null</code></p></td>
  </tr>
  <tr>
    <th><code>default_branch</code></th>
    <td>The name of the branch to prefill when new builds are created or triggered in Buildkite. It is also used to filter the builds and metrics shown on the Pipelines page.
      <p class="Docs__api-param-eg"><em>Example:</em> <code>"master"</code></p>
    </td>
  </tr>
  <tr>
    <th><code>description</code></th>
    <td>The pipeline description. <p class="Docs__api-param-eg"><em>Example:</em> <code>":package: A testing pipeline"</code></p></td>
  </tr>
  <tr>
    <th><code>env</code></th>
    <td>The pipeline environment variables. <p class="Docs__api-param-eg"><em>Example:</em> <code>{"KEY":"value"}</code></p></td>
  </tr>
  <tr>
    <th><code>provider_settings</code></th>
    <td>The source provider settings. See the <a href="#provider-settings-properties">Provider Settings</a> section for accepted properties. <p class="Docs__api-param-eg"><em>Example:</em> <code>{ "publish_commit_status": true, "build_pull_request_forks": true }</code></p></td>
  </tr>
  <tr>
    <th><code>skip_queued_branch_builds</code></th>
    <td>Skip intermediate builds. When a new build is created on a branch, any previous builds that haven't yet started on the same branch will be automatically marked as skipped.<p class="Docs__api-param-eg"><em>Example:</em> <code>true</code><br><em>Default:</em> <code>false</code></p></td>
  </tr>
  <tr>
    <th><code>skip_queued_branch_builds_filter</code></th>
    <td>A <a href="/docs/pipelines/branch-configuration#branch-pattern-examples">branch filter pattern</a> to limit which branches intermediate build skipping applies to. <p class="Docs__api-param-eg"><em>Example:</em> <code>"!master"</code><br><em>Default:</em> <code>null</code></p></td>
  </tr>
  <tr>
    <th><code>team_uuids</code></th>
    <td>An array of team UUIDs to add this pipeline to. You can find your teamâ€™s UUID either via the <a href="/docs/apis/graphql-api">GraphQL API</a>, or on the settings page for a team. This property is only available if your organization has enabled Teams.<p class="Docs__api-param-eg"><em>Example:</em> <code>["14e9501c-69fe-4cda-ae07-daea9ca3afd3"]</code></p></td>
  </tr>
</tbody>
</table>

Required scope: `write_pipelines`

Success response: `201 Created`

Error responses:

<table>
<tbody>
  <tr><th><code>422 Unprocessable Entity</code></th><td><code>{ "message": "Validation Failed", "errors": [ ... ] }</code></td></tr>
</tbody>
</table>

## Update a pipeline

Updates one or more properties of an existing pipeline.

To update a pipeline's YAML steps, make a PATCH request to the `pipelines` endpoint, passing the `configuration` attribute in the request body:


```bash
curl -X PATCH "https://api.buildkite.com/v2/organizations/{org.slug}/pipelines/{slug}" \
  -d '{
    "repository": "git@github.com:acme-inc/new-repo.git",
    "configuration": "steps:\n  - command: \"new.sh\"\n    agents:\n    - \"myqueue=true\""
  }'
```

<div class="Docs__troubleshooting-note">
  <p>Patch requests can only update attributes already present in the pipeline YAML.</p>
</div>

```json
{
  "id": "14e9501c-69fe-4cda-ae07-daea9ca3afd3",
  "graphql_id": "UGlwZWxpbmUtLS1lOTM4ZGQxYy03MDgwLTQ4ZmQtOGQyMC0yNmQ4M2E0ZjNkNDg=",
  "url": "https://api.buildkite.com/v2/organizations/acme-inc/pipelines/my-pipeline",
  "web_url": "https://buildkite.com/acme-inc/my-pipeline",
  "name": "My Pipeline",
  "description": null,
  "slug": "my-pipeline",
  "repository": "git@github.com:acme-inc/new-repo.git",
  "branch_configuration": "master",
  "default_branch": "master"
  "provider": {
    "id": "github",
    "webhook_url": "https://webhook.buildkite.com/deliver/xxx",
    "settings": {
      "publish_commit_status": true,
      "build_pull_requests": true,
      "build_pull_request_forks": false,
      "build_tags": false,
      "publish_commit_status_per_step": false,
      "repository": "acme-inc/new-repo",
      "trigger_mode": "code"
    }
  },
  "skip_queued_branch_builds": false,
  "skip_queued_branch_builds_filter": null,
  "cancel_running_branch_builds": false,
  "cancel_running_branch_builds_filter": null,
  "builds_url": "https://api.buildkite.com/v2/organizations/acme-inc/pipelines/my-pipeline/builds",
  "badge_url": "https://badge.buildkite.com/58b3da999635d0ad2daae5f784e56d264343eb02526f129bfb.svg",
  "created_at": "2015-03-01 06:44:40 UTC",
  "configuration": "steps:\n  - command: \"new.sh\"\n    agents:\n    - \"something=true\"",
  "steps": [
    {
      "type": "script",
      "name": null,
      "command": "new.sh",
      "artifact_paths": null,
      "branch_configuration": null,
      "env": {},
      "timeout_in_minutes": null,
      "agent_query_rules": [
        "myqueue=true"
      ],
      "concurrency": null,
      "parallelism": null
    }
  ],
  "env": {
  },
  "scheduled_builds_count": 0,
  "running_builds_count": 0,
  "scheduled_jobs_count": 0,
  "running_jobs_count": 0,
  "waiting_jobs_count": 0,
  "visibility": "private"
}
```

Optional [request body properties](/docs/api#request-body-properties):

<table>
<tbody>
  <tr>
    <th><code>branch_configuration</code></th>
    <td>A <a href="/docs/pipelines/branch-configuration#pipeline-level-branch-filtering">branch filter pattern</a> to limit which pushed branches trigger builds on this pipeline.<p class="Docs__api-param-eg"><em>Example:</em> <code>"master feature/*"</code><br><em>Default:</em> <code>null</code></p></td>
  </tr>
  <tr>
    <th><code>cancel_running_branch_builds</code></th>
    <td>Cancel intermediate builds. When a new build is created on a branch, any previous builds that are running on the same branch will be automatically canceled.<p class="Docs__api-param-eg"><em>Example:</em> <code>true</code><br><em>Default:</em> <code>false</code></p></td>
  </tr>
  <tr>
    <th><code>cancel_running_branch_builds_filter</code></th>
    <td>A <a href="/docs/pipelines/branch-configuration#branch-pattern-examples">branch filter pattern</a> to limit which branches intermediate build cancelling applies to. <p class="Docs__api-param-eg"><em>Example:</em> <code>"develop prs/*"</code><br><em>Default:</em> <code>null</code></p></td>
  </tr>
  <tr>
    <th><code>default_branch</code></th>
    <td>The name of the branch to prefill when new builds are created or triggered in Buildkite.
      <p class="Docs__api-param-eg"><em>Example:</em> <code>"master"</code></p>
    </td>
  </tr>
  <tr>
    <th><code>description</code></th>
    <td>The pipeline description. <p class="Docs__api-param-eg"><em>Example:</em> <code>":package: A testing pipeline"</code></p></td>
  </tr>
    <tr>
    <th><code>env</code></th>
    <td>The pipeline environment variables. <p class="Docs__api-param-eg"><em>Example:</em> <code>{"KEY":"value"}</code></p></td>
  </tr>
  <tr>
    <th><code>name</code></th>
    <td>The name of the pipeline.<p class="Docs__api-param-eg"><em>Example:</em> <code>"New Pipeline"</code></p></td>
  </tr>
  <tr>
    <th><code>provider_settings</code></th>
    <td>The source provider settings. See the <a href="#provider-settings-properties">Provider Settings</a> section for accepted properties. <p class="Docs__api-param-eg"><em>Example:</em> <code>{ "publish_commit_status": true, "build_pull_request_forks": true }</code></p></td>
  </tr>
  <tr>
    <th><code>repository</code></th>
    <td>The repository URL.<p class="Docs__api-param-eg"><em>Example:</em> <code>"git@github.com/org/repo.git"</code></p></td>
  </tr>
  <tr>
    <th><code>configuration</code></th>
    <td>The YAML pipeline that consists of the build pipeline steps.<p class="Docs__api-param-eg"><em>Example:</em> <code>"steps:\n  - command: \"new.sh\"\n    agents:\n    - \"myqueue=true\""</code></p></td>
  </tr>
  <tr>
    <th><code>skip_queued_branch_builds</code></th>
    <td>Skip intermediate builds. When a new build is created on a branch, any previous builds that haven't yet started on the same branch will be automatically marked as skipped.<p class="Docs__api-param-eg"><em>Example:</em> <code>true</code><br><em>Default:</em> <code>false</code></p></td>
  </tr>
  <tr>
    <th><code>skip_queued_branch_builds_filter</code></th>
    <td>A <a href="/docs/pipelines/branch-configuration#branch-pattern-examples">branch filter pattern</a> to limit which branches intermediate build skipping applies to. <p class="Docs__api-param-eg"><em>Example:</em> <code>"!master"</code><br><em>Default:</em> <code>null</code></p></td>
  </tr>
  <tr>
    <th><code>visibility</code></th>
    <td>Whether the pipeline is visible to everyone, including users outside this organization. <p class="Docs__api-param-eg"><em>Example:</em> <code>"public"</code><br><em>Default:</em> <code>"private"</code></p></td>
  </tr>
</tbody>
</table>

Required scope: `write_pipelines`

Success response: `200 OK`

Error responses:

<table>
<tbody>
  <tr><th><code>422 Unprocessable Entity</code></th><td><code>{ "message": "Validation Failed", "errors": [ ... ] }</code></td></tr>
</tbody>
</table>

<div class="Docs__troubleshooting-note">
  <p>To update a pipeline's teams, please use the <a href="/docs/apis/graphql-api">GraphQL API</a>.</p>
</div>

## Delete a pipeline

```bash
curl -X DELETE "https://api.buildkite.com/v2/organizations/{org.slug}/pipelines/{slug}"
```

Required scope: `write_pipelines`

Success response: `204 No Content`

## Add a webhook

Create webhook for an existing pipeline.

```bash
curl -X POST "https://api.buildkite.com/v2/organizations/{org.slug}/pipelines/{slug}/webhook"
```

Required scope: `write_pipelines`

Success response: `201 CREATED`

Error responses:

<table>
<tbody>
  <tr><th><code>403 Forbidden</code></th><td><code>{ "message": "Forbidden"}</code></td></tr>
</tbody>
</table>

## Provider settings properties

The [Create Pipeline](#create-a-pipeline) and [Update Pipeline](#create-a-pipeline) endpoints accept a `provider_settings` property, which allows you to configure how the pipeline is triggered based on source code provider events. Each pipeline providerâ€™s supported settings are below.

Bitbucket Cloud, Bitbucket Server, GitHub, and GitHub Enterprise all have optional `provider_settings`. Other source providers such as GitLab do not have optional settings available.

Properties available for Bitbucket Server:

<table>
<tbody>
  <tr>
    <th><code>build_pull_requests</code></th>
    <td>
      Whether to create builds for commits that are part of a Pull Request.
      <p class="Docs__api-param-eg"><em>Values:</em> <code>true</code>, <code>false</code></p></td>
  </tr>
  <tr>
    <th><code>build_tags</code></th>
    <td>
      Whether to create builds when tags are pushed.
      <p class="Docs__api-param-eg"><em>Values:</em> <code>true</code>, <code>false</code></p></td>
  </tr>
</tbody>
</table>

Properties available for Bitbucket Cloud, GitHub, and GitHub Enterprise:

<table>
<tbody>
  <tr>
    <th><code>build_pull_requests</code></th>
    <td>
      Whether to create builds for commits that are part of a Pull Request.
      <p class="Docs__api-param-eg"><em>Values:</em> <code>true</code>, <code>false</code></p>
    </td>
  </tr>
  <tr>
    <th><code>pull_request_branch_filter_enabled</code></th>
    <td>
      Whether to limit the creation of builds to specific branches or patterns.
      <p class="Docs__api-param-eg"><em>Values:</em> <code>true</code>, <code>false</code></p>
  </tr>
  <tr>
    <th><code>pull_request_branch_filter_configuration</code></th>
    <td>
      The branch filtering pattern. Only pull requests on branches matching this pattern will cause builds to be created.
      <p class="Docs__api-param-eg"><em>Example:</em> <code>"features/*"</code></p>
    </td>
  </tr>
  <tr>
    <th><code>skip_pull_request_builds_for_existing_commits</code></th>
    <td>
      Whether to skip creating a new build for a pull request if an existing build for the commit and branch already exists.
      <p class="Docs__api-param-eg"><em>Values:</em> <code>true</code>, <code>false</code></p></td>
  </tr>
  <tr>
    <th><code>build_tags</code></th>
    <td>
      Whether to create builds when tags are pushed.
      <p class="Docs__api-param-eg"><em>Values:</em> <code>true</code>, <code>false</code></p></td>
  </tr>
  <tr>
    <th><code>publish_commit_status</code></th>
    <td>
      Whether to update the status of commits in Bitbucket or GitHub.
      <p class="Docs__api-param-eg"><em>Values:</em> <code>true</code>, <code>false</code></p></td>
  </tr>
  <tr>
    <th><code>publish_commit_status_per_step</code></th>
    <td>
      Whether to create a separate status for each job in a build, allowing you to see the status of each job directly in Bitbucket or GitHub.
      <p class="Docs__api-param-eg"><em>Values:</em> <code>true</code>, <code>false</code></p></td>
  </tr>
  </tbody>
</table>

Additional properties available for GitHub:

<table>
  <tbody>
    <tr>
      <th><code>trigger_mode</code></th>
      <td>
        What type of event to trigger builds on. <code>Code</code> will create builds when code is pushed to GitHub. <code>Deployment</code> will create builds when a deployment is created with the <a href="https://developer.github.com/v3/repos/deployments/">GitHub Deployments API</a>. <code>Fork</code> will create builds when the GitHub repository is forked. <code>None</code> will not create any builds based on GitHub activity.
        <p class="Docs__api-param-eg"><em>Values:</em> <code>code</code>, <code>deployment</code>, <code>fork</code>, <code>none</code></p></td>
    </tr>
    <tr>
      <th><code>filter_enabled</code></th>
      <td>
        Whether filter conditions are being used for this step.
        <p class="Docs__api-param-eg"><em>Values:</em> <code>true</code>, <code>false</code></p></td>
    </tr>
    <tr>
      <th><code>filter_condition</code></th>
      <td>
        The conditions under which this step will run. See the <a href="/docs/pipelines/conditionals">Using Conditionals</a> guide for more information.
        <p class="Docs__api-param-eg"><em>Example:</em> <code>"build.message != 'skip'"</code></p>
      </td>
    </tr>
    <tr>
      <th><code>build_pull_request_forks</code></th>
      <td>
        Whether to create builds for pull requests from third-party forks.
        <p class="Docs__api-param-eg"><em>Values:</em> <code>true</code>, <code>false</code></p></td>
    </tr>
    <tr>
      <th><code>prefix_pull_request_fork_branch_names</code></th>
      <td>
        Prefix branch names for third-party fork builds to ensure they don't trigger branch conditions. For example, the <code>master</code> branch from <code>some-user</code> will become <code>some-user:master</code>.
        <p class="Docs__api-param-eg"><em>Values:</em> <code>true</code>, <code>false</code></p></td>
    </tr>
    <tr>
      <th><code>separate_pull_request_statuses</code></th>
      <td>
        Whether to create a separate status for pull request builds, allowing you to require a passing pull request build in your <a href="https://help.github.com/en/articles/enabling-required-status-checks">required status checks</a> in GitHub.
        <p class="Docs__api-param-eg"><em>Values:</em> <code>true</code>, <code>false</code></p></td>
    </tr>
    <tr>
      <th><code>publish_blocked_as_pending</code></th>
      <td>
        The status to use for blocked builds. <code>Pending</code> can be used with <a href="https://help.github.com/en/articles/enabling-required-status-checks">required status checks</a> to prevent merging pull requests with blocked builds.
        <p class="Docs__api-param-eg"><em>Values:</em> <code>passed</code>, <code>pending</code></p></td>
    </tr>
  </tbody>
</table>
