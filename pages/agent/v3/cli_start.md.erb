# buildkite-agent start

The Buildkite Agent’s `start` command is used to manually start an agent and register it with Buildkite.

{:toc}

## Starting an Agent

```
<%= render 'agent/v3/help/start.txt' %>
```

## Setting Tags

Each agent has tags (in 2.x we called this metadata) which can be used to group and target the agents in your build pipelines. This way you're free to dynamically scale your agents and target them based on their capabilities rather than maintaining a static list.

To set an agent’s tags you can set it in the configuration file:

```
tags="docker=true,ruby2=true"
```

or with the `--tags` command line flag:

```
buildkite-agent start --tags "docker=true" --tags "ruby2=true"
```

or with the `BUILDKITE_AGENT_TAGS` an environment variable:

```
env BUILDKITE_AGENT_TAGS="docker=true,ruby2=true" buildkite-agent start
```

## Agent Targeting

Once you've started agents with tags you can target them in the build pipeline using agent query rules.

Here's an example of targeting agents that are running with the tag `postgres` and value of `12.4`:

```yaml
steps:
  - command: "script.sh"
    agents:
      postgres: "12.4"
```
{: codeblock-file="pipeline.yml"}

You can also match for any agent with a `postgres` tag by omitting the value after the `=` sign, or by using `*`, for example:

```yaml
steps:
  - command: "script.sh"
    agents:
      postgres: '*'
```
{: codeblock-file="pipeline.yml"}

Partial wildcard matching (e.g. `postgres=12*` or `postgres=*12`) is not yet supported.

## The Queue Tag

The `queue` tag works differently from other tags, and can be used for isolating jobs and agents. See the [agent queues documentation](queues) for more information about using queues.

## Sourcing Tags from Amazon Web Services

You can load an Agent's tags from the underlying Amazon EC2 instance using `--tags-from-ec2-tags` for the instance tags and `--tags-from-ec2` to load the EC2 metadata (e.g instance name and machine type).

## Sourcing Tags from Google Cloud

You can load an Agent's tags from the underlying Google Cloud metadata using `--tags-from-gcp`.
